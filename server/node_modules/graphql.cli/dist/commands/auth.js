"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t;
    return { next: verb(0), "throw": verb(1), "return": verb(2) };
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var _this = this;
var api_1 = require("../api");
var chalk = require("chalk");
var ora = require("ora");
var figures = require("figures");
var file_1 = require("../utils/file");
var node_fetch_1 = require("node-fetch");
var open = require("open");
var cuid = require("cuid");
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = function (props) { return __awaiter(_this, void 0, void 0, function () {
    var token, cliToken, apiEndpoint, spinner, frontend, result, authToken, e_1;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                token = props.token;
                if (!!token) return [3 /*break*/, 6];
                cliToken = cuid();
                apiEndpoint = 'https://cli-auth-api.graph.cool';
                return [4 /*yield*/, node_fetch_1.default(apiEndpoint + "/create", {
                        method: 'post',
                        body: JSON.stringify({ cliToken: cliToken }),
                    })];
            case 1:
                _a.sent();
                spinner = ora("Authenticating using your browser...").start();
                frontend = 'https://cli-auth.graph.cool';
                open(frontend + "/?token=" + cliToken);
                _a.label = 2;
            case 2:
                if (!true) return [3 /*break*/, 5];
                return [4 /*yield*/, node_fetch_1.default(apiEndpoint + "/" + cliToken)];
            case 3:
                result = _a.sent();
                return [4 /*yield*/, result.json()];
            case 4:
                authToken = (_a.sent()).authToken;
                if (authToken) {
                    token = authToken;
                    return [3 /*break*/, 5];
                }
                return [3 /*break*/, 2];
            case 5:
                spinner.stop();
                _a.label = 6;
            case 6:
                file_1.writeConfig({ token: token });
                _a.label = 7;
            case 7:
                _a.trys.push([7, 9, , 10]);
                return [4 /*yield*/, api_1.default().query("{\n      viewer {\n        user {\n          id\n        }\n      }\n    }")];
            case 8:
                _a.sent();
                return [3 /*break*/, 10];
            case 9:
                e_1 = _a.sent();
                if (e_1.rawError[0].code === 2001) {
                    file_1.deleteConfig();
                    throw new Error('Invalid auth token');
                }
                throw e_1;
            case 10:
                console.log(chalk.green(figures.tick) + "  Authenticated successfully");
                return [2 /*return*/];
        }
    });
}); };
//# sourceMappingURL=auth.js.map